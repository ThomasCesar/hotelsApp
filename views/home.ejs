<%- include('partials/header') %>

<%- include('partials/nav') %>

<div class="app">

    <div class="banner-hero">
        <div>
            <h1>Find your hotel in Spain or Great Britain.</h1>
            <p>
                Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae, placeat doloremque, sapiente accusamus
                commodium tempore.
            </p>
        </div>
        <div>
            <button class="btn-primary">
                Call to action
                <i class="las la-arrow-right"></i>
            </button>
        </div>
    </div>

    <form class="searchbox" id="userFilters">
        <div>
            <p>Country</p>
            <select name="country">
                <option value="ESP">Spain</option>
                <option value="GBA">Great-Britain</option>
            </select>
        </div>
        <div>
            <p>Departure</p>
            <input type="date" name="departure" placeholder="Du" value="2022-12-01">
        </div>
        <div>
            <p>Return</p>
            <input type="date" name="return" placeholder="Au" value="2023-01-25">
        </div>
        <div>
            <button class="btn-primary" id="filterHotelsBtn" type="button">
                <i class="las la-hotel"></i> Chercher
            </button>
        </div>

    </form>
    <div class="hotels-container">
        <div class="hotels-error" id="hotelsErrors">
            <p>Search for some hotels in Spain or Great Britain right now.</p>
        </div>
        <div class="hotels-list" id="hotelslist"></div>
        <div class="hotels-loader" id="hotelsLoader" style="display:none;">
            <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
        </div>
        <div class="hotels-detectbottom" id="detectbottom" ></div>
    </div>

</div>

<%- include('partials/footer') %>

<!-- ==================================== JAVASCRIPT -->

<script>

    /* *************** init vars */

    const detectbottom = document.getElementById('detectbottom')
    const hotelslist = document.getElementById('hotelslist')
    const hotelsErrors = document.getElementById('hotelsErrors')
    const hotelsLoader = document.getElementById('hotelsLoader')
    const filterHotelsBtn = document.getElementById('filterHotelsBtn')
    const userFilters = document.getElementById('userFilters')
    let theSearchFilters = null
    
    let observeBottom = false

    let foundHotels = []
    let moreHotelsOffset = null
    const list_limit = 3

    /* *************** fetch hotels from server */

    let findHotels = ( nb_hotels_to_list = list_limit ) =>{

        hotelsErrors.innerHTML = '' 
        hotelsLoader.style.display = 'flex'

        // process the search filters

        if( !theSearchFilters )
        {
            theSearchFilters = {}
            const userFitlersData = new FormData( userFilters )
            userFitlersData.forEach((value, key) => (theSearchFilters[key] = value));
        }
        if( moreHotelsOffset )
        {
            theSearchFilters.offset = moreHotelsOffset
        }
        
        // query the hotels

        fetch(
            "/hotels",
            {
                method: "POST",
                headers: {
                    'Content-type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify( theSearchFilters )
            }
        ).then((result)=>{
            return result.json();
        }).then((result)=>{

            // bad request

            if( result.code && result.code == 'BAD_REQUEST' )
            {
                hotelsErrors.innerHTML = '<h2>Error</h2><p>' + result.message + '</p>'
                hotelsLoader.style.display = 'none'
                return
            }

            // no result

            else if( !result.data || !result.data.length )
            {
                hotelsErrors.innerHTML = '<h2>No result</h2><p>No hotel found for your search</p>'
                hotelsLoader.style.display = 'none'
                return
            }


            // save all hotels

            if( result.data )
            {
                foundHotels = result.data
            }

            // process the pagination and the next load

            if( result.pagination.next )
            {
                const urlParams = new URLSearchParams( result.pagination.next );
                if( urlParams.offset )
                {
                    moreHotelsOffset = urlParams.offset
                }
            }
            
            // list a few of the found hotels

            listHotels( nb_hotels_to_list )
            
        })
    }

    /* *************** init fetch hotels on button click */

    let listHotels = ( nb_hotels_to_list = list_limit ) =>{
        
        // listing hotels from the payload
        
        listed = 1
        while (foundHotels.length && listed<=nb_hotels_to_list ) 
        {
            buildHotelInList( foundHotels[0] )
            foundHotels.splice(0, 1)
            listed ++
        }

        // if there was not enought in the payload

        if( listed < nb_hotels_to_list )
        {

            // if we can load more from the api, do it

            if( moreHotelsOffset )
            {
                let nb_left_to_list = nb_hotels_to_list - listed
                findHotels( nb_left_to_list )
            }

            // if there is no more to fetch, everything is loaded on the page for this search, disable the observer

            else
            {
                toggleBottomLoad( false )
            }
            
        }

        // we have been able to list as much as we wanted from the payload, there might still be some

        else
        {
            toggleBottomLoad( true )
        }


    }

    /* *************** build single hotel card */

    let buildHotelInList = ( data ) =>{
        let hotelName = data.name
        let hotelId = data.hotelId
        let hotelCity = data.address.city
        let hotelDesc = data.description.short
        let hotelStars = data.starRating
        let hotelPic = 'img/building_placeholder.jpg'
        if( data.images && data.images.length )
        {
            hotelPic = data.images[0].url
        }
        let hotelHtml = ''+
        '<div class="hotel">'+
            '<img src="' + hotelPic + '">'+
            '<div class="hotel-text">'+
                '<h4>' + hotelName + '</h4>'+
                '<div class="hotel-misc">'+
                    '<span class="city"><i>'+hotelCity+'</i></span>'+
                    '<span class="stars" data-stars="' + hotelStars + '"></span>'+
                '</div>'+
                '<p>' + hotelDesc + '</p>'+
                '<div class="hotel-button">'+
                    '<button class="btn-gray btn-small">Voir plus <i class="las la-arrow-right"></i></button>'+
                '</div>'+
            '</div>'+
        '</div>'
        hotelslist.innerHTML += hotelHtml
    }


    /* ************** Enable intersectionobserver to detect bottom */

    let toggleBottomLoad = ( toggle = true ) =>{
        if( toggle )
        {
            hotelsLoader.style.display = 'flex'
            observeBottom = true
            return
        }
        hotelsLoader.style.display = 'none'
        observeBottom = false
    }

    /* *************** init app */

    (function() {

        // On filter button click

        filterHotelsBtn.onclick = () => {
            theSearchFilters = null
            hotelslist.innerHTML = '';
            findHotels()
        }

        // Set intersectionobserver

        let observer = new IntersectionObserver( 
            ()=>{
                setTimeout(() => {
                    if( !observeBottom )
                    {
                        return
                    }
                    listHotels()
                }, 2000 );
                
            }, 
            { 
                threshold : [ .1 ] 
            } 
        );
        observer.observe( detectbottom );
        
    })();

</script>